/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 25, 2016 at 12:00:39 AM Central European Standard Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/AA3BC77C-8F98-4654-B3F4-E47B12803336/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/FBJewelNetworkDataSource.h>

@protocol FBGraphQLSubscriptionHandle;
@class FBUserSession, FBMarketplaceNativeModule, NSString;

@interface FBC2CMarketplaceJewelNetworkDataSource : NSObject <FBJewelNetworkDataSource> {

	FBUserSession* _session;
	BOOL _canUpdateBadgeCount;
	FBMarketplaceNativeModule* _bridgedModule;
	unsigned long long _buyingUnread;
	unsigned long long _sellingUnread;
	id<FBGraphQLSubscriptionHandle> _subscriptionHandle;
	BOOL _needsReload;
	unsigned long long _badgeCount;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long badgeCount;              //@synthesize badgeCount=_badgeCount - In the implementation block
@property (assign,nonatomic) BOOL needsReload;                             //@synthesize needsReload=_needsReload - In the implementation block
+(void)fetchMarketplaceLandingBadgeCountWithSession:(id)arg1 onFetchMarketplaceBadgeCountSuccess:(/*^block*/id)arg2 ;
-(void)reloadDataWithReason:(long long)arg1 ;
-(void)setBridgedModule:(id)arg1 ;
-(void)setCanUpdateBadgeCount:(BOOL)arg1 ;
-(void)clearBadgeCount;
-(void)addSubscription;
-(void)_logBadgeCountChange:(unsigned long long)arg1 oldBadgeCount:(unsigned long long)arg2 ;
-(void)updateBadgeCountWithResults:(id)arg1 ;
-(void)_logJewelImpression;
-(BOOL)_shouldLogJewelImpressionWithTimestamp:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setNeedsReload:(BOOL)arg1 ;
-(id)initWithSession:(id)arg1 ;
-(void)cancelAllRequests;
-(BOOL)needsReload;
-(void)setBadgeCount:(unsigned long long)arg1 ;
-(unsigned long long)badgeCount;
@end

